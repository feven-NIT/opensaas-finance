# NOTE: you can let Wasp set up your Postgres DB by running `wasp start db` in a separate terminal window. 
# then, in a new terminal window, run `wasp db migrate-dev` and finally `wasp start`.
# If you use `wasp start db` then you DO NOT need to add a DATABASE_URL env variable here.
# DATABASE_URL=

# For testing, go to https://dashboard.stripe.com/test/apikeys and get a test stripe key that starts with "sk_test_..."
STRIPE_API_KEY=sk_test_51Qewn307m1UKjuk2rWlGeSPcNom4CEExuBq2ns9fp1k8vcKYSMoSw55zQhmHz5tENV40cBbKokHKG1e5PBypF8E300N6wsoHxq
# After downloading starting the stripe cli (https://stripe.com/docs/stripe-cli) with `stripe listen --forward-to localhost:3001/payments-webhook` it will output your signing secret
STRIPE_WEBHOOK_SECRET=whsec_...
# You can find your Stripe customer portal URL in the Stripe Dashboard under the 'Customer Portal' settings.
STRIPE_CUSTOMER_PORTAL_URL=https://billing.stripe.com/p/login/test_fZe7wsaRH9qS8pi3cc

# For testing, create a new store in test mode on https://lemonsqueezy.com
LEMONSQUEEZY_API_KEY=eyJ...
# After creating a store, you can find your store id in the store settings https://app.lemonsqueezy.com/settings/stores
LEMONSQUEEZY_STORE_ID=012345
# define your own webhook secret when creating a new webhook on https://app.lemonsqueezy.com/settings/webhooks
LEMONSQUEEZY_WEBHOOK_SECRET=my-webhook-secret

# If using Stripe, go to https://dashboard.stripe.com/test/products and click on + Add Product
# If using Lemon Squeezy, go to https://app.lemonsqueezy.com/products and create new products and variants
PAYMENTS_BREAK_INTO_INTERVIEWS_PLAN_ID=price_1Qewu107m1UKjuk2XxiRtVpU

# set this as a comma-separated list of emails you want to give admin privileges to upon registeration
ADMIN_EMAILS=florian.even3@gmail.com

# see our guide for setting up google auth: https://wasp-lang.dev/docs/auth/social-auth/google
GOOGLE_CLIENT_ID=722...
GOOGLE_CLIENT_SECRET=GOC...

# get your sendgrid api key at https://app.sendgrid.com/settings/api_keys
SENDGRID_API_KEY=test...

# (OPTIONAL) get your openai api key at https://platform.openai.com/account
OPENAI_API_KEY=sk-k...

# (OPTIONAL) get your plausible api key at https://plausible.io/login or https://your-plausible-instance.com/login
PLAUSIBLE_API_KEY=gUTgtB...
# You will find your site id in the Plausible dashboard. It will look like 'opensaas.sh'
PLAUSIBLE_SITE_ID=yoursite.com
PLAUSIBLE_BASE_URL=https://plausible.io/api # if you are self-hosting plausible, change this to your plausible instance's base url

# (OPTIONAL) get your google service account key at https://console.cloud.google.com/iam-admin/serviceaccounts
GOOGLE_ANALYTICS_CLIENT_EMAIL=email@example.gserviceaccount.com
# Make sure you convert the private key within the JSON file to base64 first with `echo -n "PRIVATE_KEY" | base64`. see the docs for more info. 
GOOGLE_ANALYTICS_PRIVATE_KEY=LS02...
# You will find your Property ID in the Google Analytics dashboard. It will look like '987654321'
GOOGLE_ANALYTICS_PROPERTY_ID=123456789

# (OPTIONAL) get your aws s3 credentials at https://console.aws.amazon.com and create a new IAM user with S3 access
AWS_S3_IAM_ACCESS_KEY=ACK...
AWS_S3_IAM_SECRET_KEY=t+33a...
AWS_S3_FILES_BUCKET=your-bucket-name
AWS_S3_REGION=your-region

# DEPLOY API SERVER AND DATABASE
DATABASE_URL=postgresql://wordpress:somewordpress@db:5432/wordpress
WASP_WEB_CLIENT_URL=http://34.46.84.226.nip.io
WASP_SERVER_URL=http://34.46.84.226.nip.io
PORT=3001
JWT_SECRET='7#!z9pr98okc^ax8)t*(7rf$99xf922)_m_&q8!1de_$dg594r'

SMTP_HOST=smtp.gmail.com
SMTP_USERNAME=florian.even3@gmail.com
SMTP_PASSWORD="nzya qvob nzvc drgx"
SMTP_PORT=587